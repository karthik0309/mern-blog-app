{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Mern Stack/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport classes from \"./SinglePost.module.css\";\nimport { defaultPostImage } from \"../../constants/constants\";\nimport { Link } from \"react-router-dom\";\nimport { useGlobalStateValue } from \"../../globalState/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = () => {\n  _s();\n\n  const currLocation = useLocation();\n  const postId = currLocation.pathname.split(\"/\")[2];\n  const {\n    user\n  } = useGlobalStateValue();\n  const [postData, setPostData] = useState({});\n  const [editPost, setEditPost] = useState({\n    title: \"\",\n    description: \"\",\n    updateMode: false\n  });\n  useEffect(() => {\n    const fetchSinglePost = async () => {\n      const res = await axios.get(`/post/${postId}`);\n      setPostData(res.data);\n      setEditPost({\n        title: res.data.title,\n        description: res.data.description\n      });\n    };\n\n    fetchSinglePost();\n  }, [postId]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/post/delete/${postId}`);\n      window.location.replace(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleEdit = async () => {\n    setEditPost({ ...editPost,\n      updateMode: true\n    });\n  };\n\n  const handleEditChange = name => event => {\n    setEditPost({ ...editPost,\n      [name]: event.target.value\n    });\n  };\n\n  const sendUpdatedPost = async () => {\n    try {\n      await axios.post(`/post/update/${postId}`, {});\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.single__post,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.post__container,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: postData.picture ? `/post/photo/${postId}` : defaultPostImage,\n        alt: \"post\",\n        className: classes.post__image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), editPost.updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleEditChange(\"title\"),\n        value: editPost.title,\n        className: classes.post__title__input,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.post__title,\n        children: [postData.title, user.name === postData.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.post__edit,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-edit\",\n            onClick: handleEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.post__info,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.post__author,\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${postData.name}`,\n            className: \"link\",\n            children: postData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.post__date,\n          children: new Date(postData.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), editPost.updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        onChange: handleEditChange(\"description\"),\n        value: editPost.description,\n        className: classes.post__description__input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.post__description,\n        children: postData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), editPost.updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.update__button,\n        onClick: sendUpdatedPost,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SinglePost, \"pF81zZPBsJNY82CtsBNNPoP61xs=\", false, function () {\n  return [useLocation, useGlobalStateValue];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/apple/Desktop/Mern Stack/client/src/components/singlePost/SinglePost.jsx"],"names":["React","useState","useEffect","useLocation","axios","classes","defaultPostImage","Link","useGlobalStateValue","SinglePost","currLocation","postId","pathname","split","user","postData","setPostData","editPost","setEditPost","title","description","updateMode","fetchSinglePost","res","get","data","handleDelete","delete","window","location","replace","err","console","log","handleEdit","handleEditChange","name","event","target","value","sendUpdatedPost","post","single__post","post__container","picture","post__image","post__title__input","post__title","post__edit","post__info","post__author","post__date","Date","createdAt","toDateString","post__description__input","post__description","update__button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,mBAAT,QAAoC,2BAApC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAMC,YAAY,GAAGP,WAAW,EAAhC;AACA,QAAMQ,MAAM,GAAGD,YAAY,CAACE,QAAb,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAf;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWN,mBAAmB,EAApC;AAEA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC;AACrCkB,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,WAAW,EAAE,EAFwB;AAGrCC,IAAAA,UAAU,EAAE;AAHyB,GAAD,CAAxC;AAOAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoB,eAAe,GAAG,YAAY;AACpC,YAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,SAAQb,MAAO,EAA1B,CAAlB;AACAK,MAAAA,WAAW,CAACO,GAAG,CAACE,IAAL,CAAX;AACAP,MAAAA,WAAW,CAAC;AACRC,QAAAA,KAAK,EAACI,GAAG,CAACE,IAAJ,CAASN,KADP;AAERC,QAAAA,WAAW,EAACG,GAAG,CAACE,IAAJ,CAASL;AAFb,OAAD,CAAX;AAIC,KAPD;;AAQAE,IAAAA,eAAe;AAClB,GAVQ,EAUP,CAACX,MAAD,CAVO,CAAT;;AAYA,QAAMe,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAMtB,KAAK,CAACuB,MAAN,CAAc,gBAAehB,MAAO,EAApC,CAAN;AACAiB,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,GAAxB;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAPD;;AAQA,QAAMG,UAAU,GAAG,YAAY;AAC3BhB,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeI,MAAAA,UAAU,EAAE;AAA3B,KAAD,CAAX;AACH,GAFD;;AAIA,QAAMc,gBAAgB,GAAEC,IAAD,IAASC,KAAD,IAAS;AACpCnB,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAa,OAACmB,IAAD,GAAOC,KAAK,CAACC,MAAN,CAAaC;AAAjC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,YAAS;AAC7B,QAAG;AACC,YAAMpC,KAAK,CAACqC,IAAN,CAAY,gBAAe9B,MAAO,EAAlC,EAAoC,EAApC,CAAN;AAIH,KALD,CAKC,OAAMoB,GAAN,EAAU;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GATD;;AAWF,sBACE;AAAK,IAAA,SAAS,EAAE1B,OAAO,CAACqC,YAAxB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAErC,OAAO,CAACsC,eAAxB;AAAA,8BACE;AACE,QAAA,GAAG,EAAE5B,QAAQ,CAAC6B,OAAT,GAAoB,eAAcjC,MAAO,EAAzC,GAA6CL,gBADpD;AAEE,QAAA,GAAG,EAAC,MAFN;AAGE,QAAA,SAAS,EAAED,OAAO,CAACwC;AAHrB;AAAA;AAAA;AAAA;AAAA,cADF,EAOG5B,QAAQ,CAACI,UAAT,gBACC;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAEc,gBAAgB,CAAC,OAAD,CAF5B;AAGE,QAAA,KAAK,EAAElB,QAAQ,CAACE,KAHlB;AAIE,QAAA,SAAS,EAAEd,OAAO,CAACyC,kBAJrB;AAKE,QAAA,SAAS;AALX;AAAA;AAAA;AAAA;AAAA,cADD,gBASC;AAAI,QAAA,SAAS,EAAEzC,OAAO,CAAC0C,WAAvB;AAAA,mBACGhC,QAAQ,CAACI,KADZ,EAEGL,IAAI,CAACsB,IAAL,KAAcrB,QAAQ,CAACqB,IAAvB,iBACC;AAAK,UAAA,SAAS,EAAE/B,OAAO,CAAC2C,UAAxB;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,aAAb;AAA2B,YAAA,OAAO,EAAEd;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,kBAAb;AAAgC,YAAA,OAAO,EAAER;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,eA2BE;AAAK,QAAA,SAAS,EAAErB,OAAO,CAAC4C,UAAxB;AAAA,gCACE;AAAM,UAAA,SAAS,EAAE5C,OAAO,CAAC6C,YAAzB;AAAA,6CAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASnC,QAAQ,CAACqB,IAAK,EAAlC;AAAqC,YAAA,SAAS,EAAC,MAA/C;AAAA,sBACGrB,QAAQ,CAACqB;AADZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAM,UAAA,SAAS,EAAE/B,OAAO,CAAC8C,UAAzB;AAAA,oBACG,IAAIC,IAAJ,CAASrC,QAAQ,CAACsC,SAAlB,EAA6BC,YAA7B;AADH;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF,EAuCGrC,QAAQ,CAACI,UAAT,gBACC;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAEc,gBAAgB,CAAC,aAAD,CAF5B;AAGE,QAAA,KAAK,EAAElB,QAAQ,CAACG,WAHlB;AAIE,QAAA,SAAS,EAAEf,OAAO,CAACkD;AAJrB;AAAA;AAAA;AAAA;AAAA,cADD,gBAQC;AAAG,QAAA,SAAS,EAAElD,OAAO,CAACmD,iBAAtB;AAAA,kBAA0CzC,QAAQ,CAACK;AAAnD;AAAA;AAAA;AAAA;AAAA,cA/CJ,EAiDGH,QAAQ,CAACI,UAAT,iBACD;AACA,QAAA,SAAS,EAAEhB,OAAO,CAACoD,cADnB;AAEA,QAAA,OAAO,EAAEjB,eAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD,CAjHD;;GAAM/B,U;UAEmBN,W,EAEJK,mB;;;KAJfC,U;AAmHN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport classes from \"./SinglePost.module.css\";\nimport { defaultPostImage } from \"../../constants/constants\";\nimport { Link } from \"react-router-dom\";\nimport { useGlobalStateValue } from \"../../globalState/Context\";\n\nconst SinglePost = () => {\n    \n    const currLocation = useLocation();\n    const postId = currLocation.pathname.split(\"/\")[2];\n    const { user } = useGlobalStateValue();\n\n    const [postData, setPostData] = useState({});\n    const [editPost, setEditPost] = useState({\n        title: \"\",\n        description: \"\",\n        updateMode: false,\n    });\n\n    \n    useEffect(() => {\n        const fetchSinglePost = async () => {\n        const res = await axios.get(`/post/${postId}`);\n        setPostData(res.data);\n        setEditPost({\n            title:res.data.title,\n            description:res.data.description\n            })\n        };\n        fetchSinglePost();\n    },[postId]);\n    \n    const handleDelete = async () => {\n        try {\n            await axios.delete(`/post/delete/${postId}`);\n            window.location.replace(\"/\");\n        } catch (err) {\n            console.log(err);\n        }\n    };\n    const handleEdit = async () => {\n        setEditPost({ ...editPost, updateMode: true });\n    };\n    \n    const handleEditChange=(name)=>(event)=>{\n        setEditPost({...editPost,[name]:event.target.value})\n    }\n\n    const sendUpdatedPost = async()=>{\n        try{\n            await axios.post(`/post/update/${postId}`,{\n\n            })\n\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n  return (\n    <div className={classes.single__post}>\n      <div className={classes.post__container}>\n        <img\n          src={postData.picture ? `/post/photo/${postId}` : defaultPostImage}\n          alt=\"post\"\n          className={classes.post__image}\n        />\n\n        {editPost.updateMode ? (\n          <input\n            type=\"text\"\n            onChange={handleEditChange(\"title\")}\n            value={editPost.title}\n            className={classes.post__title__input}\n            autoFocus\n          />\n        ) : (\n          <h1 className={classes.post__title}>\n            {postData.title}\n            {user.name === postData.name && (\n              <div className={classes.post__edit}>\n                <i className=\"far fa-edit\" onClick={handleEdit}></i>\n                <i className=\"far fa-trash-alt\" onClick={handleDelete}></i>\n              </div>\n            )}\n          </h1>\n        )}\n\n        <div className={classes.post__info}>\n          <span className={classes.post__author}>\n            Author:\n            <Link to={`/?user=${postData.name}`} className=\"link\">\n              {postData.name}\n            </Link>\n          </span>\n          <span className={classes.post__date}>\n            {new Date(postData.createdAt).toDateString()}\n          </span>\n        </div>\n\n        {editPost.updateMode ? (\n          <textarea\n            type=\"text\"\n            onChange={handleEditChange(\"description\")}\n            value={editPost.description}\n            className={classes.post__description__input}\n          />\n        ) : (\n          <p className={classes.post__description}>{postData.description}</p>\n        )}\n        {editPost.updateMode &&\n        <button \n        className={classes.update__button}\n        onClick={sendUpdatedPost}>\n            Update\n        </button>}\n      </div>\n    </div>\n  );\n};\n\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}