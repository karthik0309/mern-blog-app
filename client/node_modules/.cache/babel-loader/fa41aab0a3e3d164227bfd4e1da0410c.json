{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Mern Stack/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport classes from \"./SinglePost.module.css\";\nimport { defaultPostImage } from \"../../constants/constants\";\nimport { Link } from \"react-router-dom\";\nimport { useGlobalStateValue } from \"../../globalState/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = () => {\n  _s();\n\n  const currLocation = useLocation();\n  const postId = currLocation.pathname.split(\"/\")[2];\n  const {\n    user\n  } = useGlobalStateValue();\n  const [postData, setPostData] = useState({});\n  const [editPost, setEditPost] = useState({\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    updateMode: false\n  });\n  useEffect(() => {\n    const fetchSinglePost = async () => {\n      const res = await axios.get(`/post/${postId}`);\n      setPostData(res.data);\n      setEditPost({\n        title: res.data.title\n      });\n    };\n\n    fetchSinglePost();\n  }, [postId]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/post/delete/${postId}`);\n      window.location.replace(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleEdit = async () => {\n    setEditPost({ ...editPost,\n      updateMode: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.single__post,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.post__container,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: postData.picture ? `/post/photo/${postId}` : defaultPostImage,\n        alt: \"post\",\n        className: classes.post__image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), editPost.updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: postData.title,\n        className: classes.post__title__input,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.post__title,\n        children: [postData.title, user.name === postData.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.post__edit,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-edit\",\n            onClick: handleEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.post__info,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.post__author,\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${postData.name}`,\n            className: \"link\",\n            children: postData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.post__date,\n          children: new Date(postData.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), editPost.updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: postData.description,\n        className: classes.post__description__input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.post__description,\n        children: postData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SinglePost, \"LeFGp17/srsg9cEaVP+a8Dte4F4=\", false, function () {\n  return [useLocation, useGlobalStateValue];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/apple/Desktop/Mern Stack/client/src/components/singlePost/SinglePost.jsx"],"names":["React","useState","useEffect","useLocation","axios","classes","defaultPostImage","Link","useGlobalStateValue","SinglePost","currLocation","postId","pathname","split","user","postData","setPostData","editPost","setEditPost","title","description","category","updateMode","fetchSinglePost","res","get","data","handleDelete","delete","window","location","replace","err","console","log","handleEdit","single__post","post__container","picture","post__image","post__title__input","post__title","name","post__edit","post__info","post__author","post__date","Date","createdAt","toDateString","post__description__input","post__description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport classes from \"./SinglePost.module.css\";\nimport { defaultPostImage } from \"../../constants/constants\";\nimport { Link } from \"react-router-dom\";\nimport { useGlobalStateValue } from \"../../globalState/Context\";\n\nconst SinglePost = () => {\n  const currLocation = useLocation();\n  const postId = currLocation.pathname.split(\"/\")[2];\n  const { user } = useGlobalStateValue();\n\n  const [postData, setPostData] = useState({});\n  const [editPost, setEditPost] = useState({\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    updateMode: false,\n  });\n\n  useEffect(() => {\n    const fetchSinglePost = async () => {\n      const res = await axios.get(`/post/${postId}`);\n      setPostData(res.data);\n      setEditPost({\n          title:res.data.title,\n          \n    })\n    };\n    fetchSinglePost();\n  }, [postId]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/post/delete/${postId}`);\n      window.location.replace(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleEdit = async () => {\n    setEditPost({ ...editPost, updateMode: true });\n  };\n\n  return (\n    <div className={classes.single__post}>\n      <div className={classes.post__container}>\n        <img\n          src={postData.picture ? `/post/photo/${postId}` : defaultPostImage}\n          alt=\"post\"\n          className={classes.post__image}\n        />\n\n        {editPost.updateMode ? (\n          <input\n            type=\"text\"\n            value={postData.title}\n            className={classes.post__title__input}\n            autoFocus\n          />\n        ) : (\n          <h1 className={classes.post__title}>\n            {postData.title}\n            {user.name === postData.name && (\n              <div className={classes.post__edit}>\n                <i className=\"far fa-edit\" onClick={handleEdit}></i>\n                <i className=\"far fa-trash-alt\" onClick={handleDelete}></i>\n              </div>\n            )}\n          </h1>\n        )}\n\n        <div className={classes.post__info}>\n          <span className={classes.post__author}>\n            Author:\n            <Link to={`/?user=${postData.name}`} className=\"link\">\n              {postData.name}\n            </Link>\n          </span>\n          <span className={classes.post__date}>\n            {new Date(postData.createdAt).toDateString()}\n          </span>\n        </div>\n\n        {editPost.updateMode ? (\n          <textarea\n            type=\"text\"\n            value={postData.description}\n            className={classes.post__description__input}\n          />\n        ) : (\n          <p className={classes.post__description}>{postData.description}</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}